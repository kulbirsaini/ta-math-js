export declare function avg(series: Array<number>): number;
export declare function wavg(series: Array<number>): number;
export declare function sd(series: Array<number>): number;
export declare function cov(f: Array<number>, g: Array<number>): number;
export declare function cor(f: Array<number>, g: Array<number>): number;
export declare function mad(array: Array<number>): number;
export declare function pointwise(operation: (...args: any[]) => any, ...serieses: Array<Array<number>>): any[];
export declare function rolling(operation: (...args: any[]) => any, series: Array<number>, window: number): any[];
export declare function mae(f: Array<number>, g: Array<number>): number;
export declare function rmse(f: Array<number>, g: Array<number>): number;
export declare function nrmse(f: Array<number>, g: Array<number>): number;
export declare function mape(f: Array<number>, g: Array<number>): number;
export declare function sma(series: Array<number>, window: number): any[];
export declare function ema(series: Array<number>, window: number, start?: number): number[];
export declare function wma(series: Array<number>, window: number): any[];
export declare function stdev(series: Array<number>, window: number): any[];
export declare function madev(series: Array<number>, window: number): any[];
export declare function expdev(series: Array<number>, window: number): any[];
export declare function atr($high: Array<number>, $low: Array<number>, $close: Array<number>, window: number): number[];
export declare function wilderSmooth(series: Array<number>, window: number): any[];
export declare function medianPrice($high: Array<number>, $low: Array<number>): any[];
export declare function typicalPrice($high: Array<number>, $low: Array<number>, $close: Array<number>): any[];
export declare function trueRange($high: Array<number>, $low: Array<number>, $close: Array<number>): number[];
